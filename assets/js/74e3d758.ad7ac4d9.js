"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[57],{24103:e=>{e.exports=JSON.parse('{"functions":[{"name":"new","desc":"Constructs a new FluxData object.","params":[{"name":"Key","desc":"","lua_type":"string"},{"name":"Store","desc":"","lua_type":"FluxStore<T>"},{"name":"Options","desc":"","lua_type":"StoreOptions?"}],"returns":[{"desc":"","lua_type":"FluxData<T>"}],"function_type":"static","source":{"line":55,"path":"src/FluxData.lua"}},{"name":"SaveAsync","desc":"Saves the data to the DataStore(s).","params":[],"returns":[{"desc":"","lua_type":"Promise<nil>"}],"function_type":"method","source":{"line":169,"path":"src/FluxData.lua"}},{"name":"UnloadAsync","desc":"Unloads the data from the current session.","params":[],"returns":[{"desc":"","lua_type":"Promise<nil>"}],"function_type":"method","source":{"line":205,"path":"src/FluxData.lua"}},{"name":"AddUserIds","desc":"Pushes new user IDs to the list of user IDs that are allowed to access the data.","params":[{"name":"...","desc":"","lua_type":"number"}],"returns":[{"desc":"","lua_type":"nil"}],"function_type":"method","source":{"line":236,"path":"src/FluxData.lua"}},{"name":"RemoveUserIds","desc":"Removes user IDs from the list of user IDs that are allowed to access the data.","params":[{"name":"...","desc":"","lua_type":"number"}],"returns":[{"desc":"","lua_type":"nil"}],"function_type":"method","source":{"line":258,"path":"src/FluxData.lua"}},{"name":"_LoadAsync","desc":"Loads the data from the DataStore(s) and reconciles it with the template if applicable.","params":[],"returns":[{"desc":"","lua_type":"Promise<nil>"}],"function_type":"method","private":true,"source":{"line":281,"path":"src/FluxData.lua"}},{"name":"_Reconcile","desc":"Reconciles the data with the template.","params":[],"returns":[{"desc":"","lua_type":"nil"}],"function_type":"method","private":true,"source":{"line":358,"path":"src/FluxData.lua"}},{"name":"_StartSessionLockRenewer","desc":"Starts a loop that renews the session lock every 10 seconds.","params":[],"returns":[{"desc":"","lua_type":"nil"}],"function_type":"method","private":true,"source":{"line":374,"path":"src/FluxData.lua"}}],"properties":[{"name":"Key","desc":"The key that allows us to get and set data from the DataStore.\\n\\t","lua_type":"string","source":{"line":64,"path":"src/FluxData.lua"}},{"name":"Data","desc":"The data that is stored in the DataStore.\\n\\t","lua_type":"T","source":{"line":72,"path":"src/FluxData.lua"}},{"name":"SessionId","desc":"The session ID that can be used to identify the current session. This can only used for player data.\\n\\t","lua_type":"string","source":{"line":80,"path":"src/FluxData.lua"}},{"name":"LoadedAt","desc":"The time that the FluxData was created.\\n\\t","lua_type":"number","source":{"line":88,"path":"src/FluxData.lua"}},{"name":"_Options","desc":"Holds a copy of the options that were used to create the FluxStore.\\n\\t","lua_type":"StoreOptions","private":true,"source":{"line":97,"path":"src/FluxData.lua"}},{"name":"_Store","desc":"Holds a reference to the FluxStore that this FluxData is a part of.\\n\\t","lua_type":"FluxStore<T>","private":true,"source":{"line":106,"path":"src/FluxData.lua"}},{"name":"_UserIds","desc":"Holds a list of user IDs that are allowed to access the data. This only applies to player data.\\n\\t","lua_type":"Array<number>","private":true,"source":{"line":115,"path":"src/FluxData.lua"}},{"name":"Loaded","desc":"Whether or not the data has been fully loaded from the DataStore.\\n\\t","lua_type":"boolean","tags":["State"],"source":{"line":124,"path":"src/FluxData.lua"}},{"name":"Unloading","desc":"Whether or not the data is currently being unloaded.\\n\\t","lua_type":"boolean","tags":["State"],"source":{"line":133,"path":"src/FluxData.lua"}},{"name":"Locked","desc":"Whether or not the FluxData can be accessed. This is only set to true after the data has been unloaded.\\n\\t","lua_type":"boolean","tags":["State"],"source":{"line":142,"path":"src/FluxData.lua"}},{"name":"OnLocked","desc":"Fired when the FluxData is locked.\\n\\t","lua_type":"Signal<(boolean) -> ()>","tags":["Event"],"source":{"line":150,"path":"src/FluxData.lua"}}],"types":[],"name":"FluxData","desc":"Represents an entry in a FluxStore. This represents multiple types of data, such as player data, general data, etc.","tags":["Server"],"source":{"line":41,"path":"src/FluxData.lua"}}')}}]);