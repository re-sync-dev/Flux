"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[757],{38552:e=>{e.exports=JSON.parse('{"functions":[{"name":"new","desc":"Constructs a new FluxStore.","params":[{"name":"Name","desc":"","lua_type":"string"},{"name":"Template","desc":"","lua_type":"T"},{"name":"Options","desc":"","lua_type":"StoreOptions?"}],"returns":[{"desc":"","lua_type":"FluxStore<T>"}],"function_type":"static","source":{"line":70,"path":"src/FluxStore.lua"}},{"name":"GetAsync","desc":"Retrieves a session from the cache or loads it if it hasn\'t been loaded yet.","params":[{"name":"Key","desc":"","lua_type":"string"}],"returns":[{"desc":"","lua_type":"FluxData<T>"}],"function_type":"method","source":{"line":171,"path":"src/FluxStore.lua"}},{"name":"LoadAsync","desc":"Loads a session from the DataStore(s).","params":[{"name":"Key","desc":"","lua_type":"string"}],"returns":[{"desc":"","lua_type":"FluxData<T>"}],"function_type":"method","source":{"line":221,"path":"src/FluxStore.lua"}},{"name":"SaveAsync","desc":"Saves a session to the DataStore(s).","params":[{"name":"Key","desc":"","lua_type":"string"}],"returns":[{"desc":"","lua_type":"nil"}],"function_type":"method","source":{"line":252,"path":"src/FluxStore.lua"}},{"name":"UnloadAsync","desc":"Unloads a session from the cache.","params":[{"name":"Key","desc":"","lua_type":"string"}],"returns":[{"desc":"","lua_type":"nil"}],"function_type":"method","source":{"line":277,"path":"src/FluxStore.lua"}},{"name":"StartAutoSave","desc":"Starts a new thread to handle auto saving.","params":[],"returns":[],"function_type":"method","source":{"line":303,"path":"src/FluxStore.lua"}}],"properties":[{"name":"Name","desc":"\\t","lua_type":"string","source":{"line":77,"path":"src/FluxStore.lua"}},{"name":"Template","desc":"\\t","lua_type":"T","source":{"line":83,"path":"src/FluxStore.lua"}},{"name":"Options","desc":"\\t","lua_type":"StoreOptions","source":{"line":89,"path":"src/FluxStore.lua"}},{"name":"Cache","desc":"Contains sessions that have been loaded based on the key.\\n\\t","lua_type":"Dictionary<FluxData<T>>","source":{"line":96,"path":"src/FluxStore.lua"}},{"name":"NextAutoSave","desc":"The next time that the store should auto save.\\n\\t","lua_type":"number","source":{"line":103,"path":"src/FluxStore.lua"}},{"name":"DataStores","desc":"References the shard keys from the template in their respective DataStores.\\n\\t","lua_type":"Dictionary<DataStore>","source":{"line":110,"path":"src/FluxStore.lua"}},{"name":"AutoSaveStart","desc":"Fired when the store starts auto saving.\\n\\t","lua_type":"Signal<() -> ()>","tags":["Event"],"source":{"line":118,"path":"src/FluxStore.lua"}},{"name":"AutoSaveEnd","desc":"Fired when auto saving has finished.\\n\\t","lua_type":"Signal<() -> ()>","tags":["Event"],"source":{"line":126,"path":"src/FluxStore.lua"}},{"name":"AutoSaveFailed","desc":"Fired when auto saving has failed.\\n\\t","lua_type":"Signal<(string) -> ()>","tags":["Event"],"source":{"line":134,"path":"src/FluxStore.lua"}},{"name":"OnLoaded","desc":"Called when a session has been fully loaded.\\n\\t","lua_type":"(Key: string) -> ()","tags":["Bindable"],"source":{"line":142,"path":"src/FluxStore.lua"}}],"types":[],"name":"FluxStore","desc":"A container that wraps standard DataStore methods and adds additional functionality for saving and loading data.","tags":["Server"],"source":{"line":56,"path":"src/FluxStore.lua"}}')}}]);